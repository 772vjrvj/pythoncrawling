1. "인스턴스"가 뭔가요?

**인스턴스(instance)**란, 프로그램이 실제로 실행되고 있는 "복제된 객체"를 말해요.

예를 들어, main.exe라는 실행 파일이 있다고 할 때:

처음 실행하면 → 첫 번째 인스턴스

아이콘을 다시 눌러 두 번째 실행하면 → 두 번째 인스턴스

즉, 하나의 프로그램이 동시에 여러 번 실행되면 "여러 인스턴스"가 생기는 거예요.

이 코드는 "한 번만 실행되도록" 막기 위해 인스턴스를 체크하는 장치가 필요합니다.

2. 메모리에서 어떻게 막을까?

운영체제는 서로 다른 프로그램들끼리도 공유 메모리(shared memory) 라는 특별한 영역을 통해 "내가 먼저 실행 중이야!" 같은 신호를 주고받을 수 있습니다.

프로그램이 실행될 때 QSharedMemory("pando_single_instance") 라는 이름표를 붙이고, 메모리 1바이트를 차지합니다.

첫 번째 실행

아직 같은 이름의 메모리가 없으니까 → create(1) 성공 → 내가 "주인"이라고 표시.

두 번째 실행

이미 같은 이름의 메모리가 있으니까 → attach() 성공 → "아, 누군가 이미 실행 중이네"라고 판단 → 곧바로 종료.

3. 코드의 흐름

SingleInstance("pando_single_instance") 객체 생성

already_running() 호출

이미 실행 중이면 → True 반환 → 경고창 띄우고 종료

실행 중이 아니면 → 메모리 생성 → 정상적으로 앱 실행

앱 종료 시 → release() 호출해서 메모리 정리 (다음 실행 때 새로 쓸 수 있도록)

4. 쉽게 비유하자면

공유 메모리 = 열쇠 보관함

첫 번째 사람이 실행 → "열쇠 보관함"에 내 열쇠를 넣고 잠금.

두 번째 사람이 실행 → 보관함 열어보니 이미 열쇠가 있음 → "이미 누군가 사용 중"이라고 판단하고 돌아감.

👉 정리하자면:
이 코드는 프로그램을 "한 번만 실행되도록" 막는 기능을 하는데, 운영체제의 공유 메모리를 이름표(key)로 활용해서 "이미 실행 중인지" 확인하는 구조입니다.