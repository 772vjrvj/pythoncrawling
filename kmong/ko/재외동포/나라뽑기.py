import pandas as pd

# countries 리스트 정의
countries = [
    "파독",
    "팔로마",
    "바쿠",
    "비스바덴",
    "아이타스카",
    "디트로이트",
    "타라즈",
    "북오클랜드",
    "롱아일랜드",
    "뉴잉글랜드",
    "실리콘밸리",
    "런던",
    "와이카토",
    "아시아",
    "동남아",
    "타이완",
    "사할린",
    "하와이",
    "동남아시아",
    "동아시아",
    "서아시아",
    "중앙아시아",
    "남아시아",
    "두바이",
    "유럽",
    "북유럽",
    "남유럽",
    "서유럽",
    "동유럽",
    "아프리카",
    "북아프리카",
    "서아프리카",
    "동아프리카",
    "중부아프리카",
    "남아프리카",
    "북아메리카",
    "북미",
    "파리",
    "도쿄",
    "중앙아메리카",
    "카리브해 지역",
    "남아메리카",
    "오세아니아",
    "오스트레일리아",
    "뉴질랜드",
    "미크로네시아",
    "폴리네시아",
    "멜라네시아",
    "남극",
    "중남미",
    "남아공",
    "우크라",

    # 아시아
    "아프가니스탄", "아르메니아", "아제르바이잔", "바레인", "방글라데시", "부탄", "브루나이",
    "캄보디아", "중국", "키프로스", "동티모르", "조지아", "인도", "인도네시아", "이란",
    "이라크", "이스라엘", "일본", "요르단", "카자흐스탄", "쿠웨이트", "키르기스스탄",
    "라오스", "레바논", "말레이시아", "몰디브", "몽골", "미얀마", "네팔", "북한", "오만",
    "파키스탄", "팔레스타인", "필리핀", "카타르", "사우디아라비아", "싱가포르", "대한민국",
    "스리랑카", "시리아", "타지키스탄", "태국", "터키", "투르크메니스탄", "아랍에미리트",
    "우즈베키스탄", "베트남", "예멘", "홍콩", "대만", "튀르키예",

    # 유럽
    "보스니아",
    "자카르타",
    "알바니아", "안도라", "오스트리아", "벨라루스", "벨기에", "보스니아 헤르체고비나",
    "불가리아", "크로아티아", "체코", "덴마크", "에스토니아", "핀란드", "프랑스", "독일",
    "그리스", "헝가리", "아이슬란드", "아일랜드", "이탈리아", "라트비아", "리히텐슈타인",
    "리투아니아", "룩셈부르크", "몰타", "몰도바", "모나코", "몬테네그로", "네덜란드",
    "북마케도니아", "노르웨이", "폴란드", "포르투갈", "루마니아", "러시아", "산마리노",
    "세르비아", "슬로바키아", "슬로베니아", "스페인", "스웨덴", "스위스", "우크라이나",
    "영국", "바티칸 시국", "코소보",

    # 아프리카
    "알제리", "앙골라", "베냉", "보츠와나", "부르키나파소", "부룬디", "카보베르데", "카메룬",
    "중앙아프리카공화국", "차드", "코모로", "콩고 공화국", "콩고 민주 공화국", "지부티",
    "이집트", "적도기니", "에리트레아", "에스와티니", "에티오피아", "가봉", "감비아", "가나",
    "기니", "기니비사우", "코트디부아르", "케냐", "레소토", "라이베리아", "리비아",
    "마다가스카르", "말라위", "말리", "모리타니아", "모리셔스", "모로코", "모잠비크",
    "나미비아", "니제르", "나이지리아", "르완다", "상투메 프린시페", "세네갈", "세이셸",
    "시에라리온", "소말리아", "남아프리카공화국", "남수단", "수단", "탄자니아", "토고",
    "튀니지", "우간다", "잠비아", "짐바브웨",

    # 북아메리카
    "앵귈라", "앤티가 바부다", "바하마", "바베이도스", "벨리즈", "버뮤다",
    "보네르", "세인트 유스타티우스와 사바", "영국령 버진아일랜드", "캐나다", "케이맨 제도",
    "코스타리카", "쿠바", "퀴라소", "도미니카 공화국", "엘살바도르", "그레나다", "과들루프",
    "과테말라", "아이티", "온두라스", "자메이카", "마르티니크", "멕시코", "몬세라트",
    "니카라과", "파나마", "푸에르토리코", "세인트키츠 네비스", "세인트루시아", "세인트빈센트 그레나딘",
    "신트마르턴", "트리니다드 토바고", "터크스 케이커스 제도", "미국", "미국령 버진아일랜드",

    # 남아메리카
    "아르헨티나", "볼리비아", "브라질", "칠레", "콜롬비아", "에콰도르", "포클랜드 제도",
    "프랑스령 기아나", "가이아나", "파라과이", "페루", "수리남", "우루과이", "베네수엘라",

    # 오세아니아
    "미국령 사모아", "오스트레일리아", "쿡 제도", "피지", "프랑스령 폴리네시아", "괌",
    "키리바시", "마셜 제도", "미크로네시아 연방", "나우루", "뉴칼레도니아", "뉴질랜드",
    "니우에", "북마리아나 제도", "팔라우", "파푸아뉴기니", "피트케언 제도", "사모아",
    "솔로몬 제도", "토켈라우", "통가", "투발루", "바누아투", "왈리스 푸투나",
    "LA",
    "텍사스",
    "맨하튼",
    "애리조나",

    # 중동
    "바레인", "이란", "이라크", "이스라엘", "요르단", "쿠웨이트", "레바논", "오만",
    "팔레스타인", "카타르", "사우디아라비아", "시리아", "아랍에미리트", "예멘",
    "호주",
    "타이베이"
]


# 엑셀 파일 읽기 (예: input.xlsx)
df = pd.read_excel('코리아넷.xlsx')

# 결과를 저장할 배열 초기화
result_list = []

# 각 행을 반복하면서 "콘텐츠 명"과 "콘텐츠 내용"에서 countries 매칭 검사
for index, row in df.iterrows():
    matched_country = ""

    # NaN 값을 빈 문자열로 대체
    content_name = str(row['콘텐츠 명']) if pd.notna(row['콘텐츠 명']) else ""
    content_description = str(row['콘텐츠 내용']) if pd.notna(row['콘텐츠 내용']) else ""

    # 특정 조건에 따른 매핑 우선 적용
    if "재일동포" in content_name or "재일동포" in content_description:
        matched_country = "일본"
    elif "반미" in content_name or "반미" in content_description:
        matched_country = "미국"
    elif "日" in content_name or "日" in content_description:
        matched_country = "일본"
    elif "미주" in content_name or "미주" in content_description:
        matched_country = "미국"
    elif "中文" in content_name or "中文" in content_description:
        matched_country = "중국"
    elif "日本" in content_name or "日本" in content_description:
        matched_country = "일본"
    elif "EN" in content_name or "EN" in content_description:
        matched_country = "세계"
    elif "Русский" in content_name or "Русский" in content_description:
        matched_country = "러시아"
    elif "美" in content_name or "美" in content_description:
        matched_country = "미국"
    else:
        # countries 리스트의 국가명이 "콘텐츠 명" 또는 "콘텐츠 내용"에 있는지 확인
        for country in countries:
            if country in content_name or country in content_description:
                matched_country = country  # 첫 번째 매칭된 나라 저장
                break  # 첫 번째 매칭 후 종료

    # 매칭된 값이 없으면 공백 추가
    result_list.append(matched_country)

# '콘텐츠 대상지역' 컬럼으로 결과 DataFrame 생성
df['콘텐츠 대상지역'] = result_list

# 결과를 새로운 엑셀 파일로 저장 (예: output.xlsx)
df.to_excel('output.xlsx', index=False)